@page "/lifecycle"

<h3>LifeCycle</h3>

<div class="border">
    <LifeCycleComponent CountValue="@currentCount"></LifeCycleComponent>
</div>

<h1>Counter</h1>

<p>Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<br/>

@foreach (var item in EventType)
{
    @item
    <hr/>
}

@code {
    private int currentCount = 0;
    List<string> EventType = new List<string>();

    private void IncrementCount()
    {
        currentCount++;
    }

    protected override void OnInitialized()
    {
        EventType.Add("On initialized called");
    }

    protected override async Task OnInitializedAsync()
    {
        EventType.Add("OnInitializedAsync called");
        await Task.Delay(1000);
    }

    protected override void OnParametersSet()
    {
        EventType.Add("On Parameters called");
    }

    protected override async Task OnParametersSetAsync()
    {
        EventType.Add("OnParameterAsync called");
        await Task.Delay(1000);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            currentCount = 111;
        }
        else
        {
            currentCount = 999;
        }
        EventType.Add("OnAfterRender called");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        EventType.Add("OnAfterRenderAsync called");
        await Task.Delay(1000);
    }

}
